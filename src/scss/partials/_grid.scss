// --------------------------------------------------
// Flexbox Grids
// --------------------------------------------------

//
// Row
//

.row-container {
	@include make-row-container;
}
.row {
	@include make-row;
	@include margin-vert-flush;
}

//
// No Gutters
//

.row-no-gutters {

	margin-right: 0;
	margin-left: 0;

	.col {
		padding-right: 0;
		padding-left: 0;
	}
}

//
// Reverse Row
//

.row-xs-reverse {
	flex-direction: row-reverse;
}

@each $breakpoint in map-keys($breakpoints) {

	@if ($breakpoint != 'xl') { // Skip xl.

		$name: breakpoint-next($breakpoint, $breakpoints);

		@include min-width($breakpoint) {
			.row-#{$name}-reverse {
				flex-direction: row-reverse;
			}
		}
	}
}

//
// Column Base
//

.col {
	@include make-col-base;
}

@include make-cols('xs'); // .col-xs-* never collapse.

@each $breakpoint in map-keys($breakpoints) {

	@if ($breakpoint != 'xl') { // Skip xl.

		$name: breakpoint-next($breakpoint, $breakpoints);

		@include min-width($breakpoint) {
			@include make-cols($name);
		}
	}
}

//
// Equal Width Flex Columns
//

.col-xs { // .col-xs never collapse.
	flex: 1;
}

@each $breakpoint in map-keys($breakpoints) {

	@if ($breakpoint != 'xl') { // Skip xl.

		$name: breakpoint-next($breakpoint, $breakpoints);

		@include min-width($breakpoint) {
			.col-#{$name} {
				flex: 1;
			}
		}
	}
}

//
// Varying column widths.
//

@include make-col-widths('xs'); // .col-xs-* never collapse.

@each $breakpoint in map-keys($breakpoints) {

	@if ($breakpoint != 'xl') { // Skip xl.

		$name: breakpoint-next($breakpoint, $breakpoints);

		@include min-width($breakpoint) {
			@include make-col-widths($name);
		}
	}
}

//
// Vertical Alignment
//

.row {
	&.align-stretch {
		align-items: stretch;
	}
	&.align-top {
		align-items: flex-start;
	}
	&.align-middle {
		align-items: center;
	}
	&.align-bottom {
		align-items: flex-end;
	}
}
.col {
	&.align-stretch {
		align-self: stretch;
	}
	&.align-top {
		align-self: flex-start;
	}
	&.align-middle {
		align-self: center;
	}
	&.align-bottom {
		align-self: flex-end;
	}
}

//
// Horizontal Alignment
//

.row {
	&.align-start {
		justify-content: flex-start;
	}
	&.align-center {
		justify-content: center;
	}
	&.align-end {
		justify-content: flex-end;
	}
}
.col {
	&.align-start {
		margin-right: auto;
	}
	&.align-center {
		margin-right: auto;
		margin-left: auto;
	}
	&.align-end {
		margin-left: auto;
	}
}

//
// Columns w/Backgrounds
//

.col.has-bg {

	display: flex;

	> .wrap {
		padding: $grid-gutters;
	}
}

//
// Offset
//

@include make-cols('xs');

@each $breakpoint in map-keys($breakpoints) {

	@if ($breakpoint != 'xl') { // Skip xl.

		$name: breakpoint-next($breakpoint, $breakpoints);

		@include min-width($breakpoint) {
			@include make-col-offsets($name);
		}
	}
}

//
// Ordering
//

.col-xs-order-first {
	order: -1;
}

@each $breakpoint in map-keys($breakpoints) {

	@if ($breakpoint != 'xl') { // Skip xl.

		$name: breakpoint-next($breakpoint, $breakpoints);

		@include min-width($breakpoint) {
			.col-#{$name}-order-first {
				order: -1;
			}
		}
	}
}

.col-xs-order-last {
	order: 100;
}

@each $breakpoint in map-keys($breakpoints) {

	@if ($breakpoint != 'xl') { // Skip xl.

		$name: breakpoint-next($breakpoint, $breakpoints);

		@include min-width($breakpoint) {
			.col-#{$name}-order-last {
				order: 100;
			}
		}
	}
}
