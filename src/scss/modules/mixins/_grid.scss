// --------------------------------------------------
// Mixins: Flexbox Grids
// --------------------------------------------------

//
// Row Container
//

@mixin make-row-container($gutter: $grid-gutters) {
	padding: 0 ($gutter / 2);
}

//
// Rows
//

@mixin make-row($gutter: $grid-gutters) {
	display: flex;
	flex: 0 1 auto;
	flex-direction: row;
	flex-wrap: wrap;
	margin-right: ($gutter / -2);
	margin-bottom: $margin-column;
	margin-left:  ($gutter / -2);
}

//
// Column Base
//

@mixin make-col-base {

	position: relative;
	margin-bottom: $margin-column;
	min-height: 1px; // Prevent collapsing.
	padding-left: ceil(($grid-gutters / 2));
	padding-right: floor(($grid-gutters / 2));
	// Prevent columns from becoming too narrow when at smaller grid tiers by
	// always setting `width: 100%;`. This works because we use `flex` values
	// later on to override this initial width.
	width: 100%;

	@include margin-vert-flush;

	> .wrap {
		width: 100%;
	}

}

//
// All columns for a particular breakpoint,
// when positioned.
//

@mixin make-cols($breakpoint) {

	$selector: ".col-#{$breakpoint}";

	@for $i from 1 through 12 {
		$selector: "#{$selector}, .col-#{$breakpoint}-#{$i}";
	}

	@for $i from 1 through 10 {
		$selector: "#{$selector}, .col-#{$breakpoint}-0#{$i}0";
	}

	#{$selector} {
		margin-bottom: 0;
	}

}

//
// Varying width columns.
//

@mixin make-col-widths($breakpoint) {
	@for $i from 1 through 12 {
		.col-#{$breakpoint}-#{$i} {
			@include make-col-width($i, 12);
		}
	}
	@for $i from 1 through 10 {
		.col-#{$breakpoint}-0#{$i}0 {
			@include make-col-width($i, 10);
		}
	}
}

@mixin make-col-width($column, $columns) {
	flex: 0 0 percentage($column / $columns);
	// Add a `max-width` to ensure content within each column does not blow out
	// the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
	// do not appear to require this.
	max-width: percentage($column / $columns);
}

//
// Offsets
//

@mixin make-col-offsets($breakpoint) {
	@for $i from 1 through 11 {
		.col-#{$breakpoint}-offset-#{$i} {
			@include make-col-offset($i, 12);
		}
	}
	@for $i from 1 through 9 {
		.col-#{$breakpoint}-offset-0#{$i}0 {
			@include make-col-offset($i, 10);
		}
	}
}

@mixin make-col-offset($column, $columns) {
	@if ($direction == 'rtl') {
		margin-right: percentage(($column / $columns));
	} @else {
		margin-left: percentage(($column / $columns));
	}
}
