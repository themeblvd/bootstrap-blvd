// --------------------------------------------------
// Custom Buttons
// --------------------------------------------------

//
// Loading Buttons
//

$gradient-width: $fs-btn-loading-gradient-size;
$total-width: $gradient-width + ($gradient-width / 2);
$key-frame-offset: $gradient-width / 10;

.btn.loading {
  cursor: wait;
  overflow: hidden;
  position: relative;

  &:after {
    content: '';
    animation-name: fs-btn-loading;
    animation-duration: $fs-btn-loading-animation-duration;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    background: repeating-linear-gradient(
      45deg,
      rgba(255, 255, 255, 0.25) 0,
      rgba(255, 255, 255, 0.25) ($gradient-width/2),
      rgba(0, 0, 0, 0) ($gradient-width/2),
      rgba(0, 0, 0, 0) $gradient-width
    );
    display: block;
    position: absolute;
    left: -$total-width;
    right: 0;
    top: 0;
    bottom: 0;
    z-index: 1;
  }
}

@keyframes fs-btn-loading {
  from {
    transform: translate(0, 0);
  }
  to {
    transform: translate($total-width - $key-frame-offset, 0);
  }
}

//
// Close Button
//

.fs-close {
  background-color: transparent;
  border: none;
  @include fs-background-close($fs-color-svg);
  background-size: (map-get($fs-btn-close, md) / 2) (map-get($fs-btn-close, md) / 2);
  display: inline-block;
  cursor: pointer;
  padding: 0;
  outline: none !important;
  width: map-get($fs-btn-close, md);
  height: map-get($fs-btn-close, md);

  @include fs-hide-text;

  &:hover,
  &:focus {
    background-color: transparent; // Override default <button> styling.
    @include fs-background-close($fs-color-svg-hover);
  }
}
.text-light .fs-close,
.fs-close.close-light {
  @include fs-background-close($fs-color-svg-inv);
  border: none;

  &:hover,
  &:focus {
    @include fs-background-close($fs-color-svg-inv-hover);
  }
}
@each $size, $val in $fs-btn-close {
  @include fs-min-width(sm) {
    .fs-close.close-#{$size} {
      background-size: ($val / 2) ($val / 2);
      width: $val;
      height: $val;
    }
  }
}

// Additional properties for button version
// iOS requires the button element instead of an anchor tag.
// If you want the anchor version, it requires `href="#"`.
// See https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile

button.close {
  background-color: transparent !important;
  border: 0;
  box-shadow: none; // Override possible generic form stylings.
  padding: 0;
  cursor: pointer;
  -webkit-appearance: none;
}

//
// Play Button
//

.fs-play {
  background-color: transparent;
  border: none;
  @include fs-background-play($fs-color-svg);
  background-size: map-get($fs-btn-close, md) map-get($fs-btn-close, md);
  display: inline-block;
  cursor: pointer;
  padding: 0;
  outline: none !important;
  width: (map-get($fs-btn-play, md) + 4px);
  height: (map-get($fs-btn-play, md) + 4px);

  @include fs-hide-text;

  &:hover,
  &:focus {
    background-color: transparent; // Override default <button> styling.
    @include fs-background-play($fs-color-svg-hover);
  }
}
.text-light .fs-play,
.fs-play.play-light {
  @include fs-background-play($fs-color-svg-inv);
  border: none;

  &:hover,
  &:focus {
    @include fs-background-play($fs-color-svg-inv-hover);
  }
}

@each $size, $val in $fs-btn-play {
  @include fs-min-width(sm) {
    .fs-play.play-#{$size} {
      background-size: $val $val;
      width: $val;
      height: $val;
    }
  }
}

//
// Menu Toggle
//

.fs-menu-toggle {
  color: $fs-color-text-darken;
  display: inline-block;
  opacity: 0.7;
  padding: 9px 5px;

  &:hover,
  &:focus {
    color: $fs-color-text-darken;
    opacity: 1;
  }
}

// Menu Toggle: Hamburger State
.hamburger {
  display: block;
  position: relative;
  width: 22px;
  height: 14px;

  &:before,
  &:after {
    content: '';
  }
  &:before,
  &:after,
  span {
    background-color: $fs-color-text-darken;
    border-radius: 1px;
    display: block;
    opacity: 1;
    position: absolute;
    transform: preserve-3d;
    transition: transform 0.2s ease-in-out, top 0.2s ease-in-out;
    width: 100%;
    height: 2px;
  }
  &:before {
    top: 0;
  }
  span {
    top: 50%;
    margin-top: -1px;
  }
  &:after {
    bottom: 0;
  }
}

// Menu Toggle: Close "X" State
.fs-menu-toggle.collapse {
  .hamburger:before {
    top: 50%;
    transform: rotate(45deg);
  }
  .hamburger span {
    margin-top: 0;
    top: 50%;
    transform: rotate(-45deg);
  }
  .hamburger:after {
    opacity: 0;
  }
}

// Menu Toggle: Colors
.text-light .fs-menu-toggle,
.menu-toggle-light {
  border: none;
  color: $fs-color-text-inv-darken;

  &:hover,
  &:focus {
    color: $fs-color-text-inv-darken;
  }
  .hamburger:before,
  .hamburger:after,
  .hamburger span {
    background-color: $fs-color-text-inv-darken;
  }
}

// Menu Toggle: With Button Text (optional)
.fs-menu-toggle {
  .hamburger {
    float: left;
  }
  .text-after,
  .text-before {
    display: block;
    float: left;
    font-size: 14px;
    letter-spacing: $fs-btn-base-letter-spacing;
    line-height: 1;
    text-transform: uppercase;
  }
  .text-before {
    margin-right: 0.5em;
  }
  .text-after {
    margin-left: 0.5em;
  }
}

// Menu Toggle: Sizes
.text-light .menu-toggle-sm,
.menu-toggle-sm {
  padding: 6px 3px;

  .hamburger {
    width: 14px;
    height: 10px;
  }
  .hamburger:before,
  .hamburger:after,
  .hamburger span {
    height: 2px;
  }
  .text-after,
  .text-before {
    font-size: 10px; // Match height of hamburger
  }
  &.collapse .hamburger:before,
  &.collapse .hamburger span {
    top: 4px;
  }
}
.text-light .menu-toggle-md,
.menu-toggle-md {
  padding: 9px 5px;

  .hamburger {
    width: 22px;
    height: 14px;
  }
  .hamburger:before,
  .hamburger:after,
  .hamburger span {
    height: 2px;
  }
  .text-after,
  .text-before {
    font-size: 14px; // Match height of hamburger
  }
  &.collapse .hamburger:before,
  &.collapse .hamburger span {
    top: 6px;
  }
}
.text-light .menu-toggle-lg,
.menu-toggle-lg {
  padding: 12px 7px;

  .hamburger {
    width: 30px;
    height: 20px;
  }
  .hamburger:before,
  .hamburger:after,
  .hamburger span {
    height: 4px;
  }
  .hamburger span {
    margin-top: -2px;
  }
  .text-after,
  .text-before {
    font-size: 20px; // Match height of hamburger
  }
  &.collapse .hamburger:before,
  &.collapse .hamburger span {
    top: 8px;
  }
}
.text-light .menu-toggle-xl,
.menu-toggle-xl {
  padding: 15px 9px;

  .hamburger {
    width: 38px;
    height: 26px;
  }
  .hamburger:before,
  .hamburger:after,
  .hamburger span {
    height: 4px;
  }
  .hamburger span {
    margin-top: -2px;
  }
  .text-after,
  .text-before {
    font-size: 26px; // Match height of hamburger
  }
  &.collapse .hamburger:before,
  &.collapse .hamburger span {
    top: 11px;
  }
}
