// --------------------------------------------------
// Forms
// --------------------------------------------------

//
// Form
//

form {
	margin: $margin-form;
	@include margin-vert-flush;
}

//
// Fieldset
//

fieldset {
	border: 0;
	margin: $margin-fieldset;
	padding: 0;
	// Chrome and Firefox set a `min-width: min-content;` on fieldsets,
	// so we reset that to ensure it behaves more like a standard block element.
	// See https://github.com/twbs/bootstrap/issues/12359.
	min-width: 0;
	@include margin-vert-flush;
}

//
// Labels/Legends
//

label,
.label {

	color: if($style == 'inverse', $clr-text-inv-darken, $clr-text-darken);
	display: inline-block;
	font-weight: $font-weight-bold;
	font-size: $font-size-field-label;
	margin: $margin-field-label;
	max-width: 100%; // Force IE8 to wrap long content (see https://github.com/twbs/bootstrap/issues/13141)

	label,
	.label {
		margin-right: 0;
		margin-left: 0;
	}

	@include margin-vert-flush;
}
legend,
.legend {

	color: if($style == 'inverse', $clr-text-inv-darken, $clr-text-darken);
	display: block;
	font-size: $font-size-field-legend;
	font-weight: $font-weight-bold;
	border: 0;
	padding: 0;
	line-height: inherit;
	margin: $margin-field-legend;
	width: 100%;
	@include margin-vert-flush;
}
@if ($style == 'inverse') {
	.text-dark  {
		label, legend {
			color: $clr-text-darken;
		}
	}
	.text-light {
		label, legend {
			color: $clr-text-inv-darken;
		}
	}
} @else {
	.text-light {
		label, legend {
			color: $clr-text-inv-darken;
		}
	}
	.text-dark  {
		label, legend {
			color: $clr-text-darken;
		}
	}
}

//
// Required Fields
//

label,
.label {
	.required {

		color: map-deep-get($clr-contextual, danger, contrast);

		@if ($direction == 'rtl') {
			margin-right: 4px;
		} @else {
			margin-left: 4px;
		}
	}
}

//
// Help Text
//

.help-text {

	font-size: $font-size-field-help;
	margin: $margin-field-help;

	@include margin-vert-flush;

	@each $name in $clr-contextual {
		&.#{$name} {
			background-color: transparent;
		}
	}
}

//
// General Fields
//

@include field-selector {
	background-color: if($style == 'inverse', $clr-bg-inv-field, $clr-bg-field);
	border-radius: 0;
	border: $field-border-width solid if($style == 'inverse', $clr-border-inv, $clr-border);
	color: if($style == 'inverse', $clr-text-inv-base, $clr-text-base);
	display: block;
	font-size: $font-size-field;
	height: $field-base-height;
	line-height: $field-base-lh;
	margin: $margin-field;
	padding: padding-y($field-base-height, $field-base-lh, $field-border-width) $field-base-padding;
	width: 100%;
}
@include field-selector {
	&:focus {
		border-color: if($style == 'inverse', $clr-border-inv-active, $clr-border-active);
		box-shadow: 0 0 8px if($style == 'inverse', rgba($clr-black, 0.2), $clr-trans-lightest);
		outline: 0;
	}
}
@include field-selector {
	@include margin-vert-flush;
}

@if ($style == 'inverse') {

	.text-dark {
		@include field-selector {
			background-color: $clr-bg-field;
			border-color: $clr-border;
			color: $clr-text-base;
		}
		@include field-selector {
			&:focus {
				border-color: $clr-border-active;
				box-shadow: 0 0 8px $clr-trans-lightest;
			}
		}
	}

	.text-light {
		@include field-selector {
			background-color: $clr-bg-inv-field;
			border-color: $clr-border-inv;
			color: $clr-text-inv-base;
		}
		@include field-selector {
			&:focus {
				border-color: $clr-border-inv-active;
				box-shadow: 0 0 8px rgba($clr-black, 0.2);
			}
		}
	}

} @else {

	.text-light {
		@include field-selector {
			background-color: $clr-bg-inv-field;
			border-color: $clr-border-inv;
			color: $clr-text-inv-base;
		}
		@include field-selector {
			&:focus {
				border-color: $clr-border-inv-active;
				box-shadow: 0 0 8px rgba($clr-black, 0.2);
			}
		}
	}

	.text-dark {
		@include field-selector {
			background-color: $clr-bg-field;
			border-color: $clr-border;
			color: $clr-text-base;
		}
		@include field-selector {
			&:focus {
				border-color: $clr-border-active;
				box-shadow: 0 0 8px $clr-trans-lightest;
			}
		}
	}

}

//
// Text Areas
//

textarea {
	height: initial;
	line-height: $field-base-lh;
}

//
// Select
//

$select-color : if($style == 'inverse', $clr-svg-inv, $clr-svg);

select {
	appearance: none;
    background-origin: content-box;
	@include background-triangle($select-color);
	background-position: if($direction == 'rtl', left -.25rem center, right -.25rem center);
	background-repeat: no-repeat;
	background-size: 9px 6px;
}
select[multiple] {
    background-image: none;
	height: auto;
}
select[multiple] option {
	padding: 4px;
}

@if ($style == 'inverse') {
	.text-dark select {
		@include background-triangle($clr-svg);
	}
	.text-light select{
		@include background-triangle($clr-svg-inv);
	}
} @else {
	.text-light select {
		@include background-triangle($clr-svg-inv);
	}
	.text-dark select {
		@include background-triangle($clr-svg);
	}
}

//
// Field Sizing
//

@each $size, $map in $field-sizes {
	input.field-#{$size},
	select.field-#{$size} {
		font-size: map-get($map, font-size);
		height: map-get($map, height);
		line-height: map-get($map, line-height);
		padding: padding-y(map-get($map, height), map-get($map, line-height), $field-border-width) map-get($map, padding);
	}
}

//
// Checkbox / Radio Groups
//

input[type="radio"],
input[type="checkbox"] {
	line-height: normal;
	margin: 4px 0 0;
}
.checkbox-label,
.radio-label {
	font-weight: $font-weight-base;
}
.checkbox-group,
.radio-group {

	margin-top: 0;

	@include list-unstyled;

	input[type=checkbox],
	input[type=radio] {
		margin: $margin-field-group;
	}
}
.checkbox-group-inline,
.radio-group-inline {

	li {
		display: inline;

		@if ($direction == 'rtl') {
			margin-left: 10px;
		} @else {
			margin-right: 10px;
		}

		&.label {
			display: block;
		}
		label,
		.label {
			margin: 0;
		}
	}
}

//
// File Input
//

input[type="file"] {
	display: block;
}

//
// Field Groups
//

.field-group {

	margin: $margin-field;
	@include list-unstyled;

	> li {
		margin: $margin-field;
		@include margin-vert-flush;
	}
}
@include min-width(sm) {
	.field-group {

		align-items: flex-end;
		display: flex;
		justify-content: center;

		> li {
			margin: 0 5px;
			@include margin-horz-flush;
		}
		> li.has-field {
			flex: 1;
		}
	}
}

//
// Placeholders
//

input,
textarea {
	&::placeholder {
		color: if($style == 'inverse', $clr-text-inv-placeholder, $clr-text-placeholder);
	}
}
@if ($style == 'inverse') {
	.text-dark input,
	.text-dark textarea {
		&::placeholder {
			color: $clr-text-placeholder;
		}
	}
	.text-light input,
	.text-light textarea {
		&::placeholder {
			color: $clr-text-inv-placeholder;
		}
	}
} @else {
	.text-light input,
	.text-light textarea {
		&::placeholder {
			color: $clr-text-inv-placeholder;
		}
	}
	.text-dark input,
	.text-dark textarea {
		&::placeholder {
			color: $clr-text-placeholder;
		}
	}
}
