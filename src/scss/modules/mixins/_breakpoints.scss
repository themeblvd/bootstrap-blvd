// --------------------------------------------------
// Mixins: Responsive Breakpoints
// --------------------------------------------------

//
// Max-Width Media Query
//

@mixin fs-max-width($size) {
	@if ($size == 'xl') {
		@media (max-width: fs-em(map-get($fs-breakpoints, xl) - 1, $fs-font-size-base)) {
			@content;
		}
	} @else if ($size == 'lg') {
		@media (max-width: fs-em(map-get($fs-breakpoints, lg) - 1, $fs-font-size-base)) {
			@content;
		}
	} @else if ($size == 'md') {
		@media (max-width: fs-em(map-get($fs-breakpoints, md) - 1, $fs-font-size-base)) {
			@content;
		}
	} @else if ($size == 'sm') {
		@media (max-width: fs-em(map-get($fs-breakpoints, sm) - 1, $fs-font-size-base)) {
			@content;
		}
	} @else if ($size == 'xs') {
		@media (max-width: fs-em(map-get($fs-breakpoints, xs) - 1, $fs-font-size-base)) {
			@content;
		}
	} @else if ($size == '') {
		@content;
	} @else {
		@media (max-width: fs-em($size, $fs-font-size-base)) {
			@content;
		}
	}
}

//
// Min-Width Media Query
//

@mixin fs-min-width($size) {
	@if ($size == 'xl') {
		@media (min-width: fs-em(map-get($fs-breakpoints, xl), $fs-font-size-base)) {
			@content;
		}
	} @else if ($size == 'lg') {
		@media (min-width: fs-em(map-get($fs-breakpoints, lg), $fs-font-size-base)) {
			@content;
		}
	} @else if ($size == 'md') {
		@media (min-width: fs-em(map-get($fs-breakpoints, md), $fs-font-size-base)) {
			@content;
		}
	} @else if ($size == 'sm') {
		@media (min-width: fs-em(map-get($fs-breakpoints, sm), $fs-font-size-base)) {
			@content;
		}
	} @else if ($size == 'xs') {
		@media (min-width: fs-em(map-get($fs-breakpoints, xs), $fs-font-size-base)) {
			@content;
		}
	} @else if ($size == '') {
		@content;
	} @else {
		@media (min-width: fs-em($size, $fs-font-size-base)) {
			@content;
		}
	}
}
