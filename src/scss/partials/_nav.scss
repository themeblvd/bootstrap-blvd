
// Navigation
// --------------------------------------------------

//
// General Properties
//

.navbar,
.subnav {

	@include list-unstyled;
	@include clearfix;

	ul {
		@include list-unstyled;
	}
}
.menu-btn {
	display: block;
	line-height: 1;
	position: relative;
	@include transition($btn-transition);
}
.navbar-horz > li,
.subnav-horz > li {
	@if $direction == 'rtl' {
		float: right;
	} @else {
		float: left;
	}
}
@each $breakpoint in $breakpoints {
	@if $breakpoint != xl { // skip xl
		@include min-width($breakpoint) {
			.navbar-horz-#{$breakpoint} > li,
			.subnav-horz-#{$breakpoint} > li {
				@if $direction == 'rtl' {
					float: right;
				} @else {
					float: left;
				}
			}
		}
	}
}

//
// Navbar
//

.navbar {

	.menu-btn {
		border: none;
	}

	// Level 1
	> li > .menu-btn {
    	font-size: $font-size-navbar-btn;
		font-weight: $font-weight-navbar-btn;
		letter-spacing: $font-ls-navbar-btn;
    	padding: em(18px, $font-size-navbar-btn) em(20px, $font-size-navbar-btn);
		text-transform: $font-transform-navbar-btn;
	}
	&.text-dark > li > .menu-btn {

		color: $clr-text-darken;

		&:hover,
		&:focus {
			background-color: rgba($clr-light, .3);
		}
	}
	&.text-light > li > .menu-btn {

		color: $clr-text-inv-darken;

		&:hover,
		&:focus {
			background-color: rgba($clr-black, .3);
		}
	}

}

//
// Subnav
//

.subnav {

	padding: $padding-subnav;

	.menu-btn {
		border: none;
	}
	&.text-dark .menu-btn {

		color: rgba($clr-text-darken, .8);

		&:hover,
		&:focus {
			color: $clr-text-darken;
		}
	}
	&.text-light .menu-btn {

		color: rgba($clr-text-inv-darken, .8);

		&:hover,
		&:focus {
			color: $clr-text-inv-darken;
		}
	}

	// Level 1
	> li > .menu-btn {
		font-weight: $font-weight-subnav-btn;
    	font-size: $font-size-subnav-btn;
		letter-spacing: $font-ls-subnav-btn;
    	padding: em(10px, $font-size-subnav-btn) em(16px, $font-size-subnav-btn);
		text-transform: $font-transform-subnav-btn;
	}

	// Level 2 flyouts
	&.fs-menu > li > ul {
		margin-top: $padding-subnav;
	}

}

//
// Sub-levels
//

.navbar,
.subnav {

	// Level 2+
	ul {
		font-size: $font-size-dropdown;
		padding-left: 10px;
	}
	ul .menu-btn {
		padding: .75em $flyout-horz-spacing;
	}
	&.text-dark ul .menu-btn {
		color: $clr-text-darken;
	}
	&.text-dark ul a.menu-btn {

		color: $clr-text-base;

		&:hover,
		&:focus {
			color: $clr-text-darken;
		}
	}
	&.text-light ul .menu-btn {
		color: $clr-text-inv-darken;
	}
	&.text-light ul a.menu-btn {

		color: rgba($clr-text-inv-darken, .8);

		&:hover,
		&:focus {
			color: $clr-text-inv-darken;
		}
	}

	// Level 3
	ul ul {
		padding-left: 20px;
	}

}

//
// Dropdown Menus
//

.fs-menu {

	position: relative;

	li,
	.menu-btn {
	    position: relative;
	}

	// Drop indicator icons
	li.menu-item-has-children > .menu-btn {
		@if $direction == 'rtl' {
			padding-left: 2.5em;
		} @else {
			padding-right: 2.5em;
		}
	}
	li.menu-item-has-children > .menu-btn:after {
		content: "\f107";
		font-family: "FontAwesome";
		position: absolute;
		top: 50%;
		@if $direction == 'rtl' {
			left: 1em;
		} @else {
			right: 1em;
		}
		text-align: center;
		@include transform( translate(0, -50%) );
		width: 1em;
		height: 1em;
	}

	// Flyout menu
	ul {
		max-width: 100%;
		min-width: $flyout-width;
		padding: $flyout-vert-spacing 0;
		position: static;
		top: 100%;
		@if $direction == 'rtl' {
			right: 0;
		} @else {
			left: 0;
		}
		z-index: 999;
	}
	ul:not(.mega-sub-menu) {
		display: none;
	}
	ul.reverse {
		@if $direction == 'rtl' {
			left: 0;
			right: initial;
		} @else {
			left: initial;
			right: 0;
		}
	}
	ul ul {
		top: 0;
		@if $direction == 'rtl' {
			right: 100%;
		} @else {
			left: 100%;
		}
	}
	ul.reverse ul {
		@if $direction == 'rtl' {
			left: 100%;
			right: initial;
		} @else {
			left: inherit;
			right: 100%;
		}
	}
	ul.text-dark > li > .menu-btn {

		color: $clr-text-base;

		&:hover,
		&:focus {
			color: $clr-text-darken;
		}

	}
	ul.text-light > li > .menu-btn {

		color: rgba($clr-text-inv-darken, .8);

		&:hover,
		&:focus {
			color: $clr-text-inv-darken;
		}

	}

	// Display drop menus (no-js fallback)
	li:hover ul {
		display: block;
	}

	// Mega Menus
	li.has-mega-menu {
    	position: static;
	}
	.fs-mega {
		display: none;
		padding: 20px 0;
		top: 100%;
		@if $direction == 'rtl' {
			right: 0;
		} @else {
			left: 0;
		}
		width: 100%;
		z-index: 999;
	}
	.fs-mega-section {

		margin-bottom: 20px;
		width: 100%;

		ul {
			padding: 0;
		}
	}
	.fs-mega-section:last-child {
		margin-bottom: 0;
	}
	.mega-section-header {
		display: block;
		font-size: 1.1em;
		font-weight: $font-weight-bold;
	}
	.mega-section-header a {
		background-color: transparent !important;
		font-size: inherit !important;
		display: inline !important;
		padding: 0 !important;
	}

}
.fs-menu.navbar-horz,
.fs-menu.subnav-horz {
	@include dropdown();
}
@each $breakpoint in $breakpoints {
	@if $breakpoint != xl { // skip xl
		@include min-width($breakpoint) {
			.fs-menu.navbar-horz-#{$breakpoint},
			.fs-menu.subnav-horz-#{$breakpoint} {
				@include dropdown();
			}
		}
	}
}

//
// Breadcrumbs
//

.fs-breadcrumbs {

	font-size: $font-size-breadcrumbs;
	@include list-unstyled;

	li {
		display: inline-block;
	}
	> li + li:before {
		content: "/\00a0";
    	padding: 0 5px;
	}
	> li + li:before,
	a:not(:hover) {
		color: if($style == 'inverse', $clr-text-inv-lighten, $clr-text-lighten);
	}
	li.active span {
		color: if($style == 'inverse', $clr-text-inv-darken, $clr-text-darken);
	}
	&.has-bg {
		padding: $padding-breadcrumbs;
	}

	@if ( $style == 'inverse' ) {
		&.text-dark {
			> li + li:before,
			a:not(:hover) {
				color: $clr-text-lighten;
			}
			a {
				border: none;
			}
			li.active span {
				color: $clr-text-darken;
			}
		}
		&.text-light {
			> li + li:before,
			a:not(:hover) {
				color: $clr-text-inv-lighten;
			}
			a {
				border: none;
			}
			li.active span {
				color: $clr-text-inv-darken;
			}
		}
	} @else {
		&.text-light {
			> li + li:before,
			a:not(:hover) {
				color: $clr-text-inv-lighten;
			}
			a {
				border: none;
			}
			li.active span {
				color: $clr-text-inv-darken;
			}
		}
		&.text-dark {
			> li + li:before,
			a:not(:hover) {
				color: $clr-text-lighten;
			}
			a {
				border: none;
			}
			li.active span {
				color: $clr-text-darken;
			}
		}
	}
}
